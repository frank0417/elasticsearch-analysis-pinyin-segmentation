package org.elasticsearch.index.analysis.pinyin.utils;import org.elasticsearch.common.collect.ImmutableList;import org.elasticsearch.common.collect.ImmutableMap;import org.elasticsearch.common.collect.Lists;import java.util.List;public class CombinationAmbiguitySolver {    static ImmutableMap<String, List<String>> combinations = ImmutableMap.<String, List<String>>builder()            .put("xian", ImmutableList.of("xi", "an"))            .put("lian", ImmutableList.of("li", "an"))            .put("tian", ImmutableList.of("ti", "an"))            .put("yuan", ImmutableList.of("yu", "an"))            .put("niao", ImmutableList.of("ni", "ao"))            .put("jiao", ImmutableList.of("ji", "ao"))            .put("dian", ImmutableList.of("di", "an"))            // TODO more combination ambiguity to be added            .build();    public static List<String> solve(List<String> input) {        if (input.size() <= 1) return input;        List<String> additionalTokens = Lists.newArrayList();        for (String s : input) {            List<String> subTokens;            if ((subTokens = combinations.get(s)) != null) {                additionalTokens.addAll(subTokens);            }        }        input.addAll(additionalTokens);        return input;    }}