package org.elasticsearch.index.analysis.pinyin.utils;import org.elasticsearch.common.collect.ImmutableSet;import org.elasticsearch.common.collect.Lists;import java.util.List;public class OverlapAmbiguitySolver {    static ImmutableSet<Character> endChar = ImmutableSet.of(            'g', 'n', 'r', 'a'    );    static ImmutableSet<Character> startChar = ImmutableSet.of(            'a', 'e', 'i', 'o', 'u'    );    static ImmutableSet<Character> forbiddenCharOfA = ImmutableSet.of(            'a', 'e', 'u'    );    public static List<String> solve(List<String> input) {        if (input.size() <= 1) {            return input;        }        List<String> ambiguities = Lists.newArrayList();        for (int i=0; i<input.size()-1; i++) {            String former = input.get(i);            char lastCharOfFormer = former.charAt(former.length()-1);            if (endChar.contains(lastCharOfFormer)) {                String latter = input.get(i+1);                char firstCharOfLatter = latter.charAt(0);                if (startChar.contains(firstCharOfLatter)) {                    if (lastCharOfFormer != 'a' || !forbiddenCharOfA.contains(firstCharOfLatter)) {                        ambiguities.add(former.substring(0, former.length() - 1));                        ambiguities.add(former.charAt(former.length() - 1) + latter);                    }                }            }        }        input.addAll(ambiguities);        return input;    }}